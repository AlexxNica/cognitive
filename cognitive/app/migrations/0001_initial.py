# -*- coding: utf-8 -*-
# Generated by Django 1.9.2 on 2016-04-13 05:01
from __future__ import unicode_literals

from django.conf import settings
import django.contrib.auth.models
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0007_alter_validators_add_error_messages'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 30 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=30, unique=True, validators=[django.core.validators.RegexValidator('^[\\w.@+-]+$', 'Enter a valid username. This value may contain only letters, numbers and @/./+/-/_ characters.')], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=30, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('token', models.CharField(blank=True, max_length=100, null=True)),
                ('max_experiments', models.IntegerField(default=50)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Component',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[(b'Stop', b' Saved as stop'), (b'InComplete', b'More information required'), (b'InExecution', b'Execution started'), (b'Error', b' Error when executed'), (b'Completed', b'Executed Successfully')], default=b'Stop', max_length=50)),
                ('created_time', models.DateTimeField(auto_now=True)),
                ('modified_time', models.DateTimeField(auto_now=True)),
                ('execution_start_time', models.DateTimeField(blank=True, null=True)),
                ('execution_end_time', models.DateTimeField(blank=True, null=True)),
                ('data_location', models.CharField(blank=True, max_length=50, null=True)),
                ('preferred_data_location', models.CharField(blank=True, max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Data',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=50)),
                ('file_path', models.CharField(blank=True, max_length=50, null=True)),
                ('columns', models.CharField(blank=True, max_length=1024, null=True)),
                ('created_time', models.DateTimeField(auto_now=True)),
                ('modified_time', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-created_time',),
            },
        ),
        migrations.CreateModel(
            name='DataOperationType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('function_type', models.CharField(choices=[(b'Create', b'Create a new type'), (b'Update', b'Update a type'), (b'Filter', b'Filter a type'), (b'Delete', b'Delete a type')], max_length=50)),
                ('function_arg', models.CharField(choices=[(b'Row', b'Row of a table'), (b'Column', b'Column of a table'), (b'Table', b'Entire table'), (b'Model', b'Machine Learning Model')], max_length=50)),
                ('function_arg_id', models.CharField(blank=True, max_length=50, null=True)),
                ('function_subtype', models.CharField(choices=[(b'Add', b'Add operation'), (b'Sub', b'Sub operation'), (b'Mult', b'Mult operation'), (b'Div', b'Div operation'), (b'Normalize', b'Normalization operation'), (b'Project', b'Project certain columns'), (b'RemoveDup', b'Remove duplicates'), (b'RemoveMissing', b'Remove missing'), (b'Metadata', b'Metadata editor'), (b'Row', b'Adding a new row'), (b'Input', b'Load input data'), (b'Output', b'Dump output data'), (b'Train-Test', b'Train and test a machine learning model')], max_length=50)),
                ('function_subtype_arg', models.CharField(blank=True, max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Experiment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('status', models.CharField(choices=[(b'Stop', b' Saved as stop'), (b'InComplete', b'More information required'), (b'InExecution', b'Execution started'), (b'Error', b' Error when executed'), (b'Completed', b'Executed Successfully')], default=b'Stop', max_length=50)),
                ('created_time', models.DateTimeField(auto_now=True)),
                ('modified_time', models.DateTimeField(auto_now=True)),
                ('execution_start_time', models.DateTimeField(blank=True, null=True)),
                ('execution_end_time', models.DateTimeField(blank=True, null=True)),
                ('component_start_id', models.IntegerField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-modified_time'],
            },
        ),
        migrations.CreateModel(
            name='MLearning',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('model_type', models.CharField(choices=[(b'Classifier', b'Classifier models'), (b'Clustering', b'Clustering models'), (b'Regression', b'Regression models')], max_length=50)),
                ('model_name', models.CharField(max_length=50)),
                ('model_parameters', models.CharField(blank=True, max_length=50, null=True)),
                ('experiment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Experiment')),
            ],
        ),
        migrations.CreateModel(
            name='Workflow',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('graph_data', models.CharField(max_length=100)),
                ('experiment', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='app.Experiment')),
            ],
        ),
        migrations.AddField(
            model_name='component',
            name='experiment',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Experiment'),
        ),
        migrations.AddField(
            model_name='component',
            name='operation_type',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.DataOperationType'),
        ),
    ]
